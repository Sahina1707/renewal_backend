# Generated by Django 4.2.7 on 2025-07-10 10:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0003_alter_customerdocument_verified_by'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('policy_number', models.CharField(max_length=50, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('sum_assured', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('pending', 'Pending'), ('suspended', 'Suspended')], default='pending', max_length=20)),
                ('payment_frequency', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('half_yearly', 'Half Yearly'), ('yearly', 'Yearly')], default='yearly', max_length=20)),
                ('nominee_name', models.CharField(blank=True, max_length=200)),
                ('nominee_relationship', models.CharField(blank=True, max_length=100)),
                ('nominee_contact', models.CharField(blank=True, max_length=20)),
                ('policy_document', models.FileField(blank=True, null=True, upload_to='policies/documents/')),
                ('terms_conditions', models.TextField(blank=True)),
                ('special_conditions', models.TextField(blank=True)),
                ('agent_name', models.CharField(blank=True, max_length=200)),
                ('agent_code', models.CharField(blank=True, max_length=50)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_policies', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='customers.customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_policies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policies',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('base_premium_rate', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('coverage_details', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PolicyNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('note', models.TextField()),
                ('is_customer_visible', models.BooleanField(default=False)),
                ('note_type', models.CharField(choices=[('general', 'General'), ('follow_up', 'Follow Up'), ('complaint', 'Complaint'), ('renewal', 'Renewal'), ('claim', 'Claim'), ('payment', 'Payment')], default='general', max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='policies.policy')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('document_type', models.CharField(choices=[('policy_document', 'Policy Document'), ('renewal_notice', 'Renewal Notice'), ('claim_form', 'Claim Form'), ('medical_report', 'Medical Report'), ('identity_proof', 'Identity Proof'), ('address_proof', 'Address Proof'), ('income_proof', 'Income Proof'), ('other', 'Other')], max_length=30)),
                ('document_name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='policies/documents/')),
                ('file_size', models.PositiveIntegerField()),
                ('mime_type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='policies.policy')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PolicyBeneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('relationship', models.CharField(max_length=100)),
                ('contact_number', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('id_type', models.CharField(blank=True, max_length=50)),
                ('id_number', models.CharField(blank=True, max_length=100)),
                ('percentage_share', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('is_primary', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiaries', to='policies.policy')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_beneficiaries',
                'ordering': ['-is_primary', 'name'],
            },
        ),
        migrations.AddField(
            model_name='policy',
            name='policy_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='policies.policytype'),
        ),
        migrations.AddField(
            model_name='policy',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PolicyRenewal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('renewal_date', models.DateField()),
                ('new_premium_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('new_sum_assured', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('renewal_notice_sent', models.BooleanField(default=False)),
                ('renewal_notice_date', models.DateTimeField(blank=True, null=True)),
                ('customer_response', models.CharField(choices=[('interested', 'Interested'), ('not_interested', 'Not Interested'), ('needs_time', 'Needs Time'), ('no_response', 'No Response')], default='no_response', max_length=20)),
                ('contact_attempts', models.PositiveIntegerField(default=0)),
                ('last_contact_date', models.DateTimeField(blank=True, null=True)),
                ('contact_method', models.CharField(blank=True, choices=[('email', 'Email'), ('phone', 'Phone'), ('whatsapp', 'WhatsApp'), ('sms', 'SMS'), ('in_person', 'In Person')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_renewals', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renewals', to='policies.policy')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_renewals',
                'ordering': ['-renewal_date'],
                'indexes': [models.Index(fields=['renewal_date', 'status'], name='policy_rene_renewal_3783ef_idx'), models.Index(fields=['policy', 'status'], name='policy_rene_policy__7189d6_idx')],
            },
        ),
        migrations.CreateModel(
            name='PolicyPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('payment_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('net_banking', 'Net Banking'), ('upi', 'UPI'), ('wallet', 'Wallet'), ('cash', 'Cash'), ('cheque', 'Cheque'), ('bank_transfer', 'Bank Transfer')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('gateway_response', models.JSONField(blank=True, default=dict)),
                ('payment_for_period_start', models.DateField()),
                ('payment_for_period_end', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='policies.policy')),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_payments',
                'ordering': ['-payment_date'],
                'indexes': [models.Index(fields=['policy', 'payment_date'], name='policy_paym_policy__5c0f4b_idx'), models.Index(fields=['transaction_id'], name='policy_paym_transac_ad17c6_idx')],
            },
        ),
        migrations.CreateModel(
            name='PolicyClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('claim_number', models.CharField(max_length=50, unique=True)),
                ('claim_type', models.CharField(choices=[('death', 'Death Claim'), ('maturity', 'Maturity Claim'), ('surrender', 'Surrender'), ('partial_withdrawal', 'Partial Withdrawal'), ('accident', 'Accident'), ('medical', 'Medical'), ('disability', 'Disability'), ('other', 'Other')], max_length=30)),
                ('claim_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('approved_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('incident_date', models.DateField()),
                ('claim_date', models.DateField()),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('paid', 'Paid'), ('closed', 'Closed')], default='submitted', max_length=20)),
                ('description', models.TextField()),
                ('review_notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_claims', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='claims', to='policies.policy')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_claims',
                'ordering': ['-claim_date'],
                'indexes': [models.Index(fields=['claim_number'], name='policy_clai_claim_n_6d6a9a_idx'), models.Index(fields=['policy', 'status'], name='policy_clai_policy__edd3fb_idx'), models.Index(fields=['claim_date', 'status'], name='policy_clai_claim_d_47c2a7_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['policy_number'], name='policies_policy__ca1bbf_idx'),
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['customer', 'status'], name='policies_custome_612bc2_idx'),
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['end_date', 'status'], name='policies_end_dat_b7a8e0_idx'),
        ),
    ]
