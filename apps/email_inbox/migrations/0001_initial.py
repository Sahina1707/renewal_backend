# Generated by Django 5.2.6 on 2025-09-11 07:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailConversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('thread_id', models.CharField(max_length=255, unique=True)),
                ('subject', models.CharField(max_length=500)),
                ('participants', models.JSONField(default=list, help_text='List of email addresses in conversation')),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('unread_count', models.PositiveIntegerField(default=0)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('last_message_from', models.EmailField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Conversation',
                'verbose_name_plural': 'Email Conversations',
                'db_table': 'email_conversations',
                'ordering': ['-last_message_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailFilter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('filter_type', models.CharField(choices=[('subject', 'Subject'), ('from', 'From'), ('to', 'To'), ('body', 'Body'), ('category', 'Category'), ('priority', 'Priority')], max_length=20)),
                ('operator', models.CharField(choices=[('contains', 'Contains'), ('not_contains', 'Does not contain'), ('equals', 'Equals'), ('not_equals', 'Does not equal'), ('starts_with', 'Starts with'), ('ends_with', 'Ends with'), ('regex', 'Regular expression')], max_length=20)),
                ('value', models.CharField(max_length=500)),
                ('action', models.CharField(choices=[('move_to_folder', 'Move to folder'), ('mark_as_read', 'Mark as read'), ('mark_as_important', 'Mark as important'), ('add_tag', 'Add tag'), ('assign_to', 'Assign to user'), ('auto_reply', 'Auto reply'), ('forward', 'Forward')], max_length=20)),
                ('action_value', models.CharField(blank=True, help_text='Action parameter (folder name, tag, etc.)', max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system', models.BooleanField(default=False, help_text='System-created filter')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Filter priority (higher = processed first)')),
                ('match_count', models.PositiveIntegerField(default=0)),
                ('last_matched', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_filters', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_filters', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_filters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Filter',
                'verbose_name_plural': 'Email Filters',
                'db_table': 'email_filters',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmailFolder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('folder_type', models.CharField(choices=[('inbox', 'Inbox'), ('sent', 'Sent'), ('drafts', 'Drafts'), ('trash', 'Trash'), ('spam', 'Spam'), ('archive', 'Archive'), ('custom', 'Custom')], default='custom', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('is_system', models.BooleanField(default=False, help_text='System-created folder')),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_folders', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_folders', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='email_inbox.emailfolder')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_folders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Folder',
                'verbose_name_plural': 'Email Folders',
                'db_table': 'email_folders',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('name', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='EmailInboxMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_id', models.CharField(help_text='Unique message identifier', max_length=255, unique=True)),
                ('from_email', models.EmailField(max_length=254)),
                ('from_name', models.CharField(blank=True, max_length=200, null=True)),
                ('to_email', models.EmailField(max_length=254)),
                ('cc_emails', models.JSONField(blank=True, default=list)),
                ('bcc_emails', models.JSONField(blank=True, default=list)),
                ('reply_to', models.EmailField(blank=True, max_length=254, null=True)),
                ('subject', models.CharField(max_length=500)),
                ('html_content', models.TextField(blank=True, null=True)),
                ('text_content', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('general', 'General'), ('policy_renewal', 'Policy Renewal'), ('claim', 'Claim'), ('payment', 'Payment'), ('complaint', 'Complaint'), ('inquiry', 'Inquiry'), ('feedback', 'Feedback'), ('marketing', 'Marketing'), ('system', 'System')], default='general', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('sentiment', models.CharField(choices=[('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative')], default='neutral', max_length=10)),
                ('status', models.CharField(choices=[('unread', 'Unread'), ('read', 'Read'), ('replied', 'Replied'), ('forwarded', 'Forwarded'), ('archived', 'Archived'), ('deleted', 'Deleted')], default='unread', max_length=20)),
                ('is_starred', models.BooleanField(default=False)),
                ('is_important', models.BooleanField(default=False)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Custom tags')),
                ('thread_id', models.CharField(blank=True, help_text='Thread identifier', max_length=255, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_notes', models.TextField(blank=True, null=True)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('replied_at', models.DateTimeField(blank=True, null=True)),
                ('forwarded_at', models.DateTimeField(blank=True, null=True)),
                ('raw_headers', models.JSONField(blank=True, default=dict, help_text='Raw email headers')),
                ('raw_body', models.TextField(blank=True, help_text='Raw email body', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_emails', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_inbox_messages', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_inbox_messages', to=settings.AUTH_USER_MODEL)),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='messages', to='email_inbox.emailfolder')),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='email_inbox.emailinboxmessage')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_inbox_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Inbox Message',
                'verbose_name_plural': 'Email Inbox Messages',
                'db_table': 'email_inbox_messages',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('content_type', models.CharField(max_length=100)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('file_path', models.CharField(help_text='Path to stored file', max_length=500)),
                ('is_safe', models.BooleanField(default=True, help_text='File passed security scan')),
                ('scan_result', models.JSONField(blank=True, default=dict, help_text='Security scan results')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_attachments', to=settings.AUTH_USER_MODEL)),
                ('email_message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='email_inbox.emailinboxmessage')),
            ],
            options={
                'verbose_name': 'Email Attachment',
                'verbose_name_plural': 'Email Attachments',
                'db_table': 'email_attachments',
                'ordering': ['filename'],
            },
        ),
        migrations.CreateModel(
            name='EmailSearchQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('query_params', models.JSONField(default=dict, help_text='Search parameters')),
                ('is_public', models.BooleanField(default=False, help_text='Available to all users')),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_search_queries', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_search_queries', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_search_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Search Query',
                'verbose_name_plural': 'Email Search Queries',
                'db_table': 'email_search_queries',
                'ordering': ['-last_used', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='emailinboxmessage',
            index=models.Index(fields=['status', 'priority'], name='email_inbox_status_8f4d65_idx'),
        ),
        migrations.AddIndex(
            model_name='emailinboxmessage',
            index=models.Index(fields=['category', 'status'], name='email_inbox_categor_78abd3_idx'),
        ),
        migrations.AddIndex(
            model_name='emailinboxmessage',
            index=models.Index(fields=['from_email', 'received_at'], name='email_inbox_from_em_e7b9ed_idx'),
        ),
        migrations.AddIndex(
            model_name='emailinboxmessage',
            index=models.Index(fields=['thread_id', 'received_at'], name='email_inbox_thread__05adaa_idx'),
        ),
        migrations.AddIndex(
            model_name='emailinboxmessage',
            index=models.Index(fields=['assigned_to', 'status'], name='email_inbox_assigne_1569ac_idx'),
        ),
        migrations.AddIndex(
            model_name='emailinboxmessage',
            index=models.Index(fields=['is_starred', 'received_at'], name='email_inbox_is_star_014893_idx'),
        ),
    ]
