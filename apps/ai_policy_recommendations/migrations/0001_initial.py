# Generated by Django 4.2.7 on 2025-08-07 06:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('policies', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIPolicyRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('recommendation_title', models.CharField(help_text="Title of the recommendation (e.g., 'Critical Illness Insurance')", max_length=200)),
                ('recommendation_reason', models.TextField(help_text='Detailed explanation of why this policy is recommended')),
                ('coverage_amount', models.DecimalField(decimal_places=2, help_text='Recommended coverage amount', max_digits=15)),
                ('estimated_premium', models.DecimalField(decimal_places=2, help_text='Estimated yearly premium amount', max_digits=12)),
                ('priority_level', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], db_index=True, default='medium', help_text='Priority level of this recommendation', max_length=10)),
                ('recommendation_score', models.DecimalField(blank=True, decimal_places=4, help_text='AI recommendation strength (0.0000 to 1.0000)', max_digits=5, null=True)),
                ('benefits', models.JSONField(default=list, help_text='List of key benefits of this policy recommendation')),
                ('target_audience', models.TextField(blank=True, help_text='Description of who this recommendation suits best')),
                ('validity_period', models.IntegerField(default=30, help_text='Number of days this recommendation is valid')),
                ('status', models.CharField(choices=[('active', 'Active'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('under_review', 'Under Review')], db_index=True, default='active', help_text='Current status of this recommendation', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this recommendation should be displayed')),
                ('generated_at', models.DateTimeField(auto_now_add=True, help_text='When this recommendation was generated')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this recommendation expires', null=True)),
                ('viewed_at', models.DateTimeField(blank=True, help_text='When customer first viewed this recommendation', null=True)),
                ('responded_at', models.DateTimeField(blank=True, help_text='When customer responded to this recommendation', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('current_policy', models.ForeignKey(blank=True, help_text="Customer's current policy this recommendation is based on", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_recommendations_based_on', to='policies.policy')),
                ('customer', models.ForeignKey(help_text='Customer this recommendation is for', on_delete=django.db.models.deletion.CASCADE, related_name='ai_policy_recommendations', to='customers.customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('recommended_policy_type', models.ForeignKey(help_text='Recommended policy type', on_delete=django.db.models.deletion.CASCADE, related_name='ai_recommendations', to='policies.policytype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ai_policy_recommendations',
                'ordering': ['-generated_at', '-priority_level'],
            },
        ),
        migrations.CreateModel(
            name='AIPolicyRecommendationInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('interaction_type', models.CharField(choices=[('viewed', 'Viewed'), ('clicked', 'Clicked'), ('shared', 'Shared'), ('downloaded', 'Downloaded'), ('inquired', 'Inquired'), ('accepted', 'Accepted'), ('declined', 'Declined')], help_text='Type of interaction', max_length=20)),
                ('interaction_details', models.JSONField(default=dict, help_text='Additional details about the interaction')),
                ('user_agent', models.TextField(blank=True, help_text='User agent string from the interaction')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user during interaction', null=True)),
                ('interaction_at', models.DateTimeField(auto_now_add=True, help_text='When this interaction occurred')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('recommendation', models.ForeignKey(help_text='The recommendation this interaction is about', on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='ai_policy_recommendations.aipolicyrecommendation')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ai_policy_recommendation_interactions',
                'ordering': ['-interaction_at'],
                'indexes': [models.Index(fields=['recommendation', 'interaction_type'], name='ai_policy_r_recomme_6a47f7_idx'), models.Index(fields=['interaction_at'], name='ai_policy_r_interac_4a56b0_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='aipolicyrecommendation',
            index=models.Index(fields=['customer', 'status'], name='ai_policy_r_custome_37ffa8_idx'),
        ),
        migrations.AddIndex(
            model_name='aipolicyrecommendation',
            index=models.Index(fields=['recommended_policy_type'], name='ai_policy_r_recomme_37c8e7_idx'),
        ),
        migrations.AddIndex(
            model_name='aipolicyrecommendation',
            index=models.Index(fields=['priority_level', 'status'], name='ai_policy_r_priorit_d5f5b6_idx'),
        ),
        migrations.AddIndex(
            model_name='aipolicyrecommendation',
            index=models.Index(fields=['generated_at'], name='ai_policy_r_generat_66311c_idx'),
        ),
        migrations.AddIndex(
            model_name='aipolicyrecommendation',
            index=models.Index(fields=['expires_at'], name='ai_policy_r_expires_5fda9b_idx'),
        ),
    ]
