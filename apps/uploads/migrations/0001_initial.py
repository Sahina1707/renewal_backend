# Generated by Django 4.2.7 on 2025-06-26 21:52

import apps.uploads.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FileProcessingQueue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("virus_scan", "Virus Scan"),
                            ("image_resize", "Image Resize"),
                            ("pdf_extract", "PDF Text Extraction"),
                            ("metadata_extract", "Metadata Extraction"),
                            ("thumbnail_generate", "Thumbnail Generation"),
                            ("compress", "File Compression"),
                            ("convert", "Format Conversion"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=5, help_text="1=highest, 10=lowest"
                    ),
                ),
                ("task_params", models.JSONField(blank=True, default=dict)),
                ("result_data", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("max_retries", models.PositiveIntegerField(default=3)),
            ],
            options={
                "ordering": ["priority", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="FileShare",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("share_token", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("shared_with_email", models.EmailField(blank=True, max_length=254)),
                ("shared_with_name", models.CharField(blank=True, max_length=100)),
                ("requires_password", models.BooleanField(default=False)),
                ("password_hash", models.CharField(blank=True, max_length=255)),
                ("max_downloads", models.PositiveIntegerField(blank=True, null=True)),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("expires_at", models.DateTimeField()),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                ("access_log", models.JSONField(blank=True, default=list)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FileUpload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "file",
                    models.FileField(
                        max_length=500, upload_to=apps.uploads.models.upload_path
                    ),
                ),
                ("original_name", models.CharField(max_length=255)),
                (
                    "file_size",
                    models.PositiveBigIntegerField(help_text="File size in bytes"),
                ),
                ("mime_type", models.CharField(max_length=100)),
                (
                    "file_hash",
                    models.CharField(
                        help_text="SHA-256 hash", max_length=64, unique=True
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("avatar", "User Avatar"),
                            ("policy", "Policy Document"),
                            ("claim", "Claim Document"),
                            ("customer", "Customer Document"),
                            ("campaign", "Campaign Asset"),
                            ("email", "Email Attachment"),
                            ("survey", "Survey Asset"),
                            ("report", "Report File"),
                            ("import", "Data Import"),
                            ("export", "Data Export"),
                            ("template", "Template File"),
                            ("other", "Other"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "subcategory",
                    models.CharField(blank=True, db_index=True, max_length=50),
                ),
                ("tags", models.JSONField(blank=True, default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("uploading", "Uploading"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("quarantine", "Quarantine"),
                            ("deleted", "Deleted"),
                        ],
                        db_index=True,
                        default="uploading",
                        max_length=20,
                    ),
                ),
                ("processing_result", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                ("is_public", models.BooleanField(default=False)),
                ("virus_scan_result", models.CharField(blank=True, max_length=20)),
                ("virus_scan_at", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("description", models.TextField(blank=True)),
                (
                    "alt_text",
                    models.CharField(
                        blank=True, help_text="Alt text for images", max_length=255
                    ),
                ),
                ("download_count", models.PositiveIntegerField(default=0)),
                ("last_accessed", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ImageVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "variant_type",
                    models.CharField(
                        choices=[
                            ("thumbnail", "Thumbnail"),
                            ("small", "Small"),
                            ("medium", "Medium"),
                            ("large", "Large"),
                            ("original", "Original"),
                        ],
                        max_length=20,
                    ),
                ),
                ("file", models.ImageField(upload_to="variants/")),
                ("width", models.PositiveIntegerField()),
                ("height", models.PositiveIntegerField()),
                ("file_size", models.PositiveBigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["variant_type"],
            },
        ),
        migrations.CreateModel(
            name="UploadSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("is_deleted", models.BooleanField(db_index=True, default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("session_id", models.UUIDField(default=uuid.uuid4, unique=True)),
                ("filename", models.CharField(max_length=255)),
                ("file_size", models.PositiveBigIntegerField()),
                ("mime_type", models.CharField(max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("avatar", "User Avatar"),
                            ("policy", "Policy Document"),
                            ("claim", "Claim Document"),
                            ("customer", "Customer Document"),
                            ("campaign", "Campaign Asset"),
                            ("email", "Email Attachment"),
                            ("survey", "Survey Asset"),
                            ("report", "Report File"),
                            ("import", "Data Import"),
                            ("export", "Data Export"),
                            ("template", "Template File"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("chunks_total", models.PositiveIntegerField()),
                ("chunks_uploaded", models.PositiveIntegerField(default=0)),
                ("bytes_uploaded", models.PositiveBigIntegerField(default=0)),
                ("is_completed", models.BooleanField(default=False)),
                ("chunk_info", models.JSONField(blank=True, default=dict)),
                ("expires_at", models.DateTimeField()),
                (
                    "completed_file",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="upload_session",
                        to="uploads.fileupload",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
