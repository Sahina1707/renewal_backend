# Generated by Django 5.2.6 on 2025-09-11 07:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailAutomation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('trigger_type', models.CharField(choices=[('email_received', 'Email Received'), ('email_opened', 'Email Opened'), ('email_clicked', 'Email Clicked'), ('email_bounced', 'Email Bounced'), ('email_complained', 'Email Complained'), ('email_unsubscribed', 'Email Unsubscribed'), ('time_based', 'Time Based'), ('webhook', 'Webhook'), ('manual', 'Manual')], max_length=20)),
                ('trigger_conditions', models.JSONField(default=dict, help_text='Trigger conditions and filters')),
                ('action_type', models.CharField(choices=[('send_email', 'Send Email'), ('reply_email', 'Reply to Email'), ('forward_email', 'Forward Email'), ('move_to_folder', 'Move to Folder'), ('add_tag', 'Add Tag'), ('assign_to_user', 'Assign to User'), ('create_task', 'Create Task'), ('update_crm', 'Update CRM'), ('webhook_call', 'Webhook Call'), ('delay', 'Delay')], max_length=20)),
                ('action_config', models.JSONField(default=dict, help_text='Action configuration and parameters')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.PositiveIntegerField(default=0, help_text='Execution priority')),
                ('max_executions', models.PositiveIntegerField(default=0, help_text='Maximum executions (0 = unlimited)')),
                ('execution_count', models.PositiveIntegerField(default=0)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('delay_seconds', models.PositiveIntegerField(default=0, help_text='Delay before execution in seconds')),
                ('cooldown_seconds', models.PositiveIntegerField(default=0, help_text='Cooldown between executions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_automations', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_automations', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_automations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Automation',
                'verbose_name_plural': 'Email Automations',
                'db_table': 'email_automations',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmailAutomationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('trigger_data', models.JSONField(default=dict, help_text='Data that triggered the automation')),
                ('execution_data', models.JSONField(blank=True, default=dict, help_text='Data used during execution')),
                ('result_data', models.JSONField(blank=True, default=dict, help_text='Execution results')),
                ('error_message', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.FloatField(blank=True, help_text='Execution duration in seconds', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('automation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='email_integration.emailautomation')),
                ('executed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='executed_email_automations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Automation Log',
                'verbose_name_plural': 'Email Automation Logs',
                'db_table': 'email_automation_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('integration_type', models.CharField(choices=[('crm', 'CRM System'), ('helpdesk', 'Helpdesk System'), ('analytics', 'Analytics Platform'), ('marketing', 'Marketing Platform'), ('calendar', 'Calendar System'), ('storage', 'File Storage'), ('api', 'Custom API')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('api_endpoint', models.URLField(blank=True, null=True)),
                ('api_key', models.TextField(blank=True, help_text='API key (encrypted)', null=True)),
                ('api_secret', models.TextField(blank=True, help_text='API secret (encrypted)', null=True)),
                ('configuration', models.JSONField(default=dict, help_text='Integration-specific configuration')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('sync_interval', models.PositiveIntegerField(default=3600, help_text='Sync interval in seconds')),
                ('auto_sync', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_integrations', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_integrations', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_integrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Integration',
                'verbose_name_plural': 'Email Integrations',
                'db_table': 'email_integrations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmailIntegrationAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], default='daily', max_length=20)),
                ('webhook_events_received', models.PositiveIntegerField(default=0)),
                ('webhook_events_processed', models.PositiveIntegerField(default=0)),
                ('webhook_events_failed', models.PositiveIntegerField(default=0)),
                ('automation_executions', models.PositiveIntegerField(default=0)),
                ('automation_successes', models.PositiveIntegerField(default=0)),
                ('automation_failures', models.PositiveIntegerField(default=0)),
                ('integration_syncs', models.PositiveIntegerField(default=0)),
                ('integration_successes', models.PositiveIntegerField(default=0)),
                ('integration_failures', models.PositiveIntegerField(default=0)),
                ('webhook_success_rate', models.FloatField(default=0.0)),
                ('automation_success_rate', models.FloatField(default=0.0)),
                ('integration_success_rate', models.FloatField(default=0.0)),
                ('avg_webhook_processing_time', models.FloatField(default=0.0)),
                ('avg_automation_execution_time', models.FloatField(default=0.0)),
                ('avg_integration_sync_time', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Integration Analytics',
                'verbose_name_plural': 'Email Integration Analytics',
                'db_table': 'email_integration_analytics',
                'ordering': ['-date'],
                'unique_together': {('date', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='EmailSLA',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('sla_type', models.CharField(choices=[('response_time', 'Response Time'), ('resolution_time', 'Resolution Time'), ('delivery_time', 'Delivery Time'), ('availability', 'Availability')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], max_length=10)),
                ('target_value', models.PositiveIntegerField(help_text='Target value in minutes')),
                ('warning_threshold', models.PositiveIntegerField(help_text='Warning threshold in minutes')),
                ('conditions', models.JSONField(default=dict, help_text='SLA conditions and filters')),
                ('is_active', models.BooleanField(default=True)),
                ('is_escalation_enabled', models.BooleanField(default=True)),
                ('escalation_recipients', models.JSONField(default=list, help_text='List of escalation email addresses')),
                ('total_incidents', models.PositiveIntegerField(default=0)),
                ('met_sla_count', models.PositiveIntegerField(default=0)),
                ('breached_sla_count', models.PositiveIntegerField(default=0)),
                ('warning_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_slas', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_slas', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_slas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email SLA',
                'verbose_name_plural': 'Email SLAs',
                'db_table': 'email_slas',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplateVariable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('variable_type', models.CharField(choices=[('text', 'Text'), ('number', 'Number'), ('date', 'Date'), ('datetime', 'DateTime'), ('boolean', 'Boolean'), ('email', 'Email'), ('url', 'URL'), ('json', 'JSON')], max_length=20)),
                ('default_value', models.TextField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('validation_rules', models.JSONField(default=dict, help_text='Validation rules for the variable')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_system', models.BooleanField(default=False, help_text='System-defined variable')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_template_variables', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_template_variables', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_template_variables', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Template Variable',
                'verbose_name_plural': 'Email Template Variables',
                'db_table': 'email_template_variables',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmailWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('sendgrid', 'SendGrid'), ('aws_ses', 'AWS SES'), ('mailgun', 'Mailgun'), ('postmark', 'Postmark')], max_length=20)),
                ('event_type', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('complained', 'Complained'), ('unsubscribed', 'Unsubscribed'), ('blocked', 'Blocked'), ('deferred', 'Deferred'), ('dropped', 'Dropped')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processed', 'Processed'), ('failed', 'Failed'), ('ignored', 'Ignored')], default='pending', max_length=20)),
                ('raw_data', models.JSONField(default=dict, help_text='Raw webhook payload')),
                ('processed_data', models.JSONField(blank=True, default=dict, help_text='Processed webhook data')),
                ('email_message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_message_id', models.CharField(blank=True, max_length=255, null=True)),
                ('event_time', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('processing_notes', models.TextField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Email Webhook',
                'verbose_name_plural': 'Email Webhooks',
                'db_table': 'email_webhooks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['provider', 'event_type'], name='email_webho_provide_60e6a6_idx'), models.Index(fields=['status', 'created_at'], name='email_webho_status_e54dd8_idx'), models.Index(fields=['email_message_id', 'event_type'], name='email_webho_email_m_07215f_idx')],
            },
        ),
    ]
