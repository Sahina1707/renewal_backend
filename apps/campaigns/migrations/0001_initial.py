# Generated by Django 4.2.7 on 2025-07-31 12:00

from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('running', 'Running'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('channels', models.JSONField(default=list, help_text='List of communication channels')),
                ('schedule_type', models.CharField(choices=[('immediate', 'Immediate'), ('schedule later', 'Scheduled Later')], default='immediate', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.JSONField(blank=True, default=dict)),
                ('subject_line', models.CharField(blank=True, max_length=200)),
                ('use_personalization', models.BooleanField(default=True)),
                ('personalization_fields', models.JSONField(blank=True, default=list)),
                ('target_count', models.PositiveIntegerField(default=0)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('opened_count', models.PositiveIntegerField(default=0)),
                ('clicked_count', models.PositiveIntegerField(default=0)),
                ('total_responses', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('email_sent', models.PositiveIntegerField(default=0)),
                ('email_delivered', models.PositiveIntegerField(default=0)),
                ('email_opened', models.PositiveIntegerField(default=0)),
                ('email_clicked', models.PositiveIntegerField(default=0)),
                ('email_bounced', models.PositiveIntegerField(default=0)),
                ('whatsapp_sent', models.PositiveIntegerField(default=0)),
                ('whatsapp_delivered', models.PositiveIntegerField(default=0)),
                ('whatsapp_read', models.PositiveIntegerField(default=0)),
                ('whatsapp_replied', models.PositiveIntegerField(default=0)),
                ('sms_sent', models.PositiveIntegerField(default=0)),
                ('sms_delivered', models.PositiveIntegerField(default=0)),
                ('sms_replied', models.PositiveIntegerField(default=0)),
                ('total_responses', models.PositiveIntegerField(default=0)),
                ('interested_responses', models.PositiveIntegerField(default=0)),
                ('not_interested_responses', models.PositiveIntegerField(default=0)),
                ('callback_requests', models.PositiveIntegerField(default=0)),
                ('complaints', models.PositiveIntegerField(default=0)),
                ('unsubscribes', models.PositiveIntegerField(default=0)),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('cost_per_recipient', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('conversions', models.PositiveIntegerField(default=0)),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
            ],
            options={
                'db_table': 'campaign_analytics',
            },
        ),
        migrations.CreateModel(
            name='CampaignAutomation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('trigger_type', models.CharField(choices=[('policy_expiry', 'Policy Expiry'), ('payment_due', 'Payment Due'), ('new_customer', 'New Customer'), ('claim_status', 'Claim Status Change'), ('birthday', 'Customer Birthday'), ('anniversary', 'Policy Anniversary')], max_length=30)),
                ('trigger_conditions', models.JSONField(default=dict)),
                ('delay_days', models.PositiveIntegerField(default=0)),
                ('delay_hours', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('total_triggered', models.PositiveIntegerField(default=0)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'campaign_automations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CampaignFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('feedback_type', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral'), ('complaint', 'Complaint'), ('suggestion', 'Suggestion')], max_length=20)),
                ('rating', models.PositiveIntegerField(blank=True, help_text='Rating from 1-5', null=True)),
                ('feedback_text', models.TextField()),
                ('channel_received', models.CharField(choices=[('email', 'Email'), ('whatsapp', 'WhatsApp'), ('sms', 'SMS'), ('phone', 'Phone Call'), ('push', 'Push Notification')], max_length=20)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'campaign_feedback',
                'ordering': ['-received_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('email_status', models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('rejected', 'Rejected'), ('opted_out', 'Opted Out'), ('blocked', 'Blocked')], default='pending', max_length=20)),
                ('whatsapp_status', models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('rejected', 'Rejected'), ('opted_out', 'Opted Out'), ('blocked', 'Blocked')], default='pending', max_length=20)),
                ('sms_status', models.CharField(choices=[('pending', 'Pending'), ('queued', 'Queued'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('rejected', 'Rejected'), ('opted_out', 'Opted Out'), ('blocked', 'Blocked')], default='pending', max_length=20)),
                ('email_engagement', models.CharField(choices=[('not_opened', 'Not Opened'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('replied', 'Replied'), ('forwarded', 'Forwarded'), ('unsubscribed', 'Unsubscribed')], default='not_opened', max_length=20)),
                ('whatsapp_engagement', models.CharField(choices=[('not_opened', 'Not Opened'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('replied', 'Replied'), ('forwarded', 'Forwarded'), ('unsubscribed', 'Unsubscribed')], default='not_opened', max_length=20)),
                ('sms_engagement', models.CharField(choices=[('not_opened', 'Not Opened'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('replied', 'Replied'), ('forwarded', 'Forwarded'), ('unsubscribed', 'Unsubscribed')], default='not_opened', max_length=20)),
                ('tracking_id', models.CharField(blank=True, max_length=64, unique=True)),
                ('email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('email_delivered_at', models.DateTimeField(blank=True, null=True)),
                ('whatsapp_sent_at', models.DateTimeField(blank=True, null=True)),
                ('whatsapp_delivered_at', models.DateTimeField(blank=True, null=True)),
                ('sms_sent_at', models.DateTimeField(blank=True, null=True)),
                ('sms_delivered_at', models.DateTimeField(blank=True, null=True)),
                ('email_opened_at', models.DateTimeField(blank=True, null=True)),
                ('email_clicked_at', models.DateTimeField(blank=True, null=True)),
                ('email_replied_at', models.DateTimeField(blank=True, null=True)),
                ('whatsapp_read_at', models.DateTimeField(blank=True, null=True)),
                ('whatsapp_replied_at', models.DateTimeField(blank=True, null=True)),
                ('sms_replied_at', models.DateTimeField(blank=True, null=True)),
                ('email_error_message', models.TextField(blank=True)),
                ('whatsapp_error_message', models.TextField(blank=True)),
                ('sms_error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('email_content', models.JSONField(blank=True, default=dict, help_text='Personalized email content')),
                ('whatsapp_content', models.JSONField(blank=True, default=dict, help_text='Personalized WhatsApp content')),
                ('sms_content', models.JSONField(blank=True, default=dict, help_text='Personalized SMS content')),
                ('has_responded', models.BooleanField(default=False)),
                ('response_channel', models.CharField(blank=True, choices=[('email', 'Email'), ('whatsapp', 'WhatsApp'), ('sms', 'SMS'), ('phone', 'Phone Call'), ('push', 'Push Notification')], max_length=20)),
                ('response_type', models.CharField(blank=True, choices=[('interested', 'Interested'), ('not_interested', 'Not Interested'), ('callback_requested', 'Callback Requested'), ('more_info_requested', 'More Info Requested'), ('complaint', 'Complaint'), ('unsubscribe', 'Unsubscribe'), ('policy_renewed', 'Policy Renewed'), ('payment_made', 'Payment Made'), ('document_requested', 'Document Requested')], max_length=30)),
                ('response_notes', models.TextField(blank=True)),
                ('response_received_at', models.DateTimeField(blank=True, null=True)),
                ('conversion_achieved', models.BooleanField(default=False, help_text='Did this recipient convert (renew/purchase)?')),
                ('conversion_value', models.DecimalField(blank=True, decimal_places=2, help_text='Value of conversion', max_digits=12, null=True)),
                ('conversion_date', models.DateTimeField(blank=True, null=True)),
                ('recipient_metadata', models.JSONField(blank=True, default=dict, help_text='Additional recipient-specific data')),
            ],
            options={
                'db_table': 'campaign_recipients',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('recipients_processed', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
            ],
            options={
                'db_table': 'campaign_schedules',
                'ordering': ['-scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='CampaignSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('criteria', models.JSONField(default=dict, help_text='Segmentation criteria in JSON format')),
                ('customer_count', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'campaign_segments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CampaignTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('email', 'Email Template'), ('whatsapp', 'WhatsApp Template'), ('sms', 'SMS Template')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('variables', models.JSONField(default=list, help_text='List of template variables')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'campaign_templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CampaignType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('default_channels', models.JSONField(default=list, help_text='Default communication channels for this campaign type')),
            ],
            options={
                'db_table': 'campaign_types',
                'ordering': ['name'],
            },
        ),
    ]
