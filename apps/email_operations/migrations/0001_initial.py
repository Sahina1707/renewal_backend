# Generated by Django 5.2.6 on 2025-09-11 07:22

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], default='daily', max_length=20)),
                ('campaign_id', models.CharField(blank=True, max_length=100, null=True)),
                ('template_id', models.UUIDField(blank=True, null=True)),
                ('emails_sent', models.PositiveIntegerField(default=0)),
                ('emails_delivered', models.PositiveIntegerField(default=0)),
                ('emails_opened', models.PositiveIntegerField(default=0)),
                ('emails_clicked', models.PositiveIntegerField(default=0)),
                ('emails_bounced', models.PositiveIntegerField(default=0)),
                ('emails_complained', models.PositiveIntegerField(default=0)),
                ('emails_unsubscribed', models.PositiveIntegerField(default=0)),
                ('delivery_rate', models.FloatField(default=0.0, help_text='Delivery rate percentage')),
                ('open_rate', models.FloatField(default=0.0, help_text='Open rate percentage')),
                ('click_rate', models.FloatField(default=0.0, help_text='Click rate percentage')),
                ('bounce_rate', models.FloatField(default=0.0, help_text='Bounce rate percentage')),
                ('complaint_rate', models.FloatField(default=0.0, help_text='Complaint rate percentage')),
                ('unsubscribe_rate', models.FloatField(default=0.0, help_text='Unsubscribe rate percentage')),
                ('avg_response_time', models.FloatField(default=0.0, help_text='Average response time in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Analytics',
                'verbose_name_plural': 'Email Analytics',
                'db_table': 'email_analytics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date', 'period_type'], name='email_analy_date_8c692c_idx'), models.Index(fields=['campaign_id', 'date'], name='email_analy_campaig_274110_idx'), models.Index(fields=['template_id', 'date'], name='email_analy_templat_b0a454_idx')],
                'unique_together': {('date', 'period_type', 'campaign_id', 'template_id')},
            },
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_id', models.CharField(help_text='Unique message identifier', max_length=255, unique=True)),
                ('to_email', models.EmailField(max_length=254)),
                ('cc_emails', models.JSONField(blank=True, default=list, help_text='CC email addresses')),
                ('bcc_emails', models.JSONField(blank=True, default=list, help_text='BCC email addresses')),
                ('from_email', models.EmailField(max_length=254)),
                ('from_name', models.CharField(blank=True, max_length=100, null=True)),
                ('reply_to', models.EmailField(blank=True, max_length=254, null=True)),
                ('subject', models.CharField(max_length=500)),
                ('html_content', models.TextField(blank=True, null=True)),
                ('text_content', models.TextField(blank=True, null=True)),
                ('template_id', models.UUIDField(blank=True, help_text='ID of the email template used', null=True)),
                ('template_name', models.CharField(blank=True, max_length=200, null=True)),
                ('template_variables', models.JSONField(blank=True, default=dict, help_text='Variables used in template')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sending', 'Sending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced'), ('complained', 'Complained'), ('unsubscribed', 'Unsubscribed')], default='pending', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='When to send the email', null=True)),
                ('sent_at', models.DateTimeField(blank=True, help_text='When the email was actually sent', null=True)),
                ('campaign_id', models.CharField(blank=True, help_text='Campaign identifier', max_length=100, null=True)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags for categorization')),
                ('provider_name', models.CharField(blank=True, help_text='Email provider used', max_length=100, null=True)),
                ('provider_message_id', models.CharField(blank=True, help_text="Provider's message ID", max_length=255, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_email_messages', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_email_messages', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_email_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Message',
                'verbose_name_plural': 'Email Messages',
                'db_table': 'email_messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailDeliveryReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider_name', models.CharField(max_length=100)),
                ('provider_message_id', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('delivered', 'Delivered'), ('bounced', 'Bounced'), ('complained', 'Complained'), ('unsubscribed', 'Unsubscribed'), ('blocked', 'Blocked'), ('deferred', 'Deferred'), ('dropped', 'Dropped')], max_length=20)),
                ('status_message', models.TextField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, help_text='Response time in seconds', null=True)),
                ('raw_data', models.JSONField(blank=True, default=dict, help_text='Raw provider response data')),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('email_message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_reports', to='email_operations.emailmessage')),
            ],
            options={
                'verbose_name': 'Email Delivery Report',
                'verbose_name_plural': 'Email Delivery Reports',
                'db_table': 'email_delivery_reports',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('scheduled_for', models.DateTimeField(default=django.utils.timezone.now, help_text='When to process this email')),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('max_attempts', models.PositiveIntegerField(default=3)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='queue_entry', to='email_operations.emailmessage')),
            ],
            options={
                'verbose_name': 'Email Queue Entry',
                'verbose_name_plural': 'Email Queue Entries',
                'db_table': 'email_queue',
                'ordering': ['scheduled_for', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='EmailTracking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('opened', 'Opened'), ('clicked', 'Clicked'), ('bounced', 'Bounced'), ('complained', 'Complained'), ('unsubscribed', 'Unsubscribed'), ('blocked', 'Blocked')], max_length=20)),
                ('event_data', models.JSONField(blank=True, default=dict, help_text='Additional event data')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('link_url', models.URLField(blank=True, null=True)),
                ('link_text', models.CharField(blank=True, max_length=500, null=True)),
                ('event_time', models.DateTimeField(auto_now_add=True)),
                ('email_message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_events', to='email_operations.emailmessage')),
            ],
            options={
                'verbose_name': 'Email Tracking Event',
                'verbose_name_plural': 'Email Tracking Events',
                'db_table': 'email_tracking',
                'ordering': ['-event_time'],
            },
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['status', 'priority'], name='email_messa_status_039f46_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['to_email', 'status'], name='email_messa_to_emai_3e76ae_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['campaign_id', 'status'], name='email_messa_campaig_a9e08d_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['scheduled_at', 'status'], name='email_messa_schedul_5985c2_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['created_at', 'status'], name='email_messa_created_2be1d8_idx'),
        ),
        migrations.AddIndex(
            model_name='emaildeliveryreport',
            index=models.Index(fields=['email_message', 'status'], name='email_deliv_email_m_9a1521_idx'),
        ),
        migrations.AddIndex(
            model_name='emaildeliveryreport',
            index=models.Index(fields=['provider_name', 'status'], name='email_deliv_provide_1df7ce_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['status', 'scheduled_for'], name='email_queue_status_a0ce4f_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['priority', 'scheduled_for'], name='email_queue_priorit_d57fdb_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtracking',
            index=models.Index(fields=['email_message', 'event_type'], name='email_track_email_m_06ed8e_idx'),
        ),
        migrations.AddIndex(
            model_name='emailtracking',
            index=models.Index(fields=['event_type', 'event_time'], name='email_track_event_t_05da68_idx'),
        ),
    ]
