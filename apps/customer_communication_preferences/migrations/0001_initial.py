# Generated by Django 4.2.7 on 2025-08-08 07:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerCommunicationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('preferred_channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('phone', 'Phone Call'), ('whatsapp', 'WhatsApp'), ('postal_mail', 'Postal Mail'), ('in_app', 'In-App Notification'), ('push_notification', 'Push Notification')], default='email', help_text='Primary preferred communication channel', max_length=20)),
                ('secondary_channel', models.CharField(blank=True, choices=[('email', 'Email'), ('sms', 'SMS'), ('phone', 'Phone Call'), ('whatsapp', 'WhatsApp'), ('postal_mail', 'Postal Mail'), ('in_app', 'In-App Notification'), ('push_notification', 'Push Notification')], help_text='Secondary communication channel', max_length=20)),
                ('communication_type', models.CharField(choices=[('policy_renewal', 'Policy Renewal'), ('payment_reminder', 'Payment Reminder'), ('policy_expiry', 'Policy Expiry'), ('claim_updates', 'Claim Updates'), ('promotional', 'Promotional'), ('newsletter', 'Newsletter'), ('system_alerts', 'System Alerts'), ('customer_service', 'Customer Service'), ('emergency_alerts', 'Emergency Alerts'), ('policy_updates', 'Policy Updates'), ('birthday_wishes', 'Birthday Wishes'), ('survey_feedback', 'Survey & Feedback')], help_text='Type of communication this preference applies to', max_length=30)),
                ('frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('never', 'Never')], default='immediate', help_text='How frequently customer wants to receive this type of communication', max_length=20)),
                ('email_enabled', models.BooleanField(default=True, help_text='Whether customer wants email communications')),
                ('sms_enabled', models.BooleanField(default=True, help_text='Whether customer wants SMS communications')),
                ('phone_enabled', models.BooleanField(default=True, help_text='Whether customer wants phone call communications')),
                ('whatsapp_enabled', models.BooleanField(default=False, help_text='Whether customer wants WhatsApp communications')),
                ('postal_mail_enabled', models.BooleanField(default=False, help_text='Whether customer wants postal mail communications')),
                ('push_notification_enabled', models.BooleanField(default=True, help_text='Whether customer wants push notifications')),
                ('preferred_time', models.CharField(choices=[('morning', 'Morning (8 AM - 12 PM)'), ('afternoon', 'Afternoon (12 PM - 5 PM)'), ('evening', 'Evening (5 PM - 8 PM)'), ('night', 'Night (8 PM - 10 PM)'), ('anytime', 'Anytime'), ('business_hours', 'Business Hours Only')], default='business_hours', help_text='Preferred time for receiving communications', max_length=20)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('hi', 'Hindi'), ('mr', 'Marathi'), ('gu', 'Gujarati'), ('ta', 'Tamil'), ('te', 'Telugu'), ('kn', 'Kannada'), ('ml', 'Malayalam'), ('bn', 'Bengali'), ('pa', 'Punjabi'), ('or', 'Odia'), ('as', 'Assamese')], default='en', help_text='Preferred language for communications', max_length=5)),
                ('alternate_email', models.EmailField(blank=True, help_text='Alternate email for specific communication types', max_length=254)),
                ('alternate_phone', models.CharField(blank=True, help_text='Alternate phone number for specific communication types', max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number.')])),
                ('do_not_disturb', models.BooleanField(default=False, help_text='Whether customer is in do not disturb mode')),
                ('dnd_start_time', models.TimeField(blank=True, help_text='Start time for do not disturb period', null=True)),
                ('dnd_end_time', models.TimeField(blank=True, help_text='End time for do not disturb period', null=True)),
                ('marketing_consent', models.BooleanField(default=True, help_text='Whether customer consents to marketing communications')),
                ('data_sharing_consent', models.BooleanField(default=False, help_text='Whether customer consents to data sharing for communications')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this preference setting is active')),
                ('priority_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', help_text='Priority level for this communication type', max_length=10)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about customer communication preferences')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(help_text='Customer these preferences belong to', on_delete=django.db.models.deletion.CASCADE, related_name='detailed_communication_preferences', to='customers.customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer_communication_preferences',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['customer'], name='customer_co_custome_46f4a3_idx'), models.Index(fields=['preferred_channel'], name='customer_co_preferr_ba672f_idx'), models.Index(fields=['communication_type'], name='customer_co_communi_7b612d_idx'), models.Index(fields=['frequency'], name='customer_co_frequen_62b9d8_idx'), models.Index(fields=['is_active'], name='customer_co_is_acti_f24ae6_idx'), models.Index(fields=['marketing_consent'], name='customer_co_marketi_9f0075_idx'), models.Index(fields=['do_not_disturb'], name='customer_co_do_not__3a8e0a_idx')],
                'unique_together': {('customer', 'communication_type')},
            },
        ),
    ]
