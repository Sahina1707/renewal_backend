# Generated by Django 4.2.7 on 2025-08-11 06:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('policies', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PolicyCoverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('coverage_type', models.CharField(choices=[('primary', 'Primary Coverage'), ('vehicle_protection', 'Vehicle Protection'), ('liability', 'Liability Coverage'), ('additional_benefit', 'Additional Benefit'), ('exclusion', 'Exclusion'), ('condition', 'Condition')], db_index=True, default='primary', help_text='Type of coverage', max_length=50)),
                ('coverage_category', models.CharField(choices=[('comprehensive', 'Comprehensive Coverage'), ('own_damage', 'Own Damage'), ('engine_protection', 'Engine Protection'), ('zero_depreciation', 'Zero Depreciation'), ('third_party_liability', 'Third Party Liability'), ('personal_accident', 'Personal Accident'), ('passenger_coverage', 'Passenger Coverage'), ('legal_liability', 'Legal Liability'), ('enhanced_protection', 'Enhanced Protection'), ('addon_covers', 'Add-on Covers'), ('financial_benefits', 'Financial Benefits'), ('not_covered', 'Not Covered'), ('conditions_apply', 'Conditions Apply')], db_index=True, default='comprehensive', help_text='Category of coverage', max_length=50)),
                ('coverage_name', models.CharField(help_text='Name of the coverage', max_length=200)),
                ('coverage_description', models.TextField(help_text='Detailed description of the coverage')),
                ('coverage_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Coverage amount/limit', max_digits=15, null=True)),
                ('deductible_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Deductible amount for this coverage', max_digits=12, null=True)),
                ('coverage_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Coverage percentage (e.g., 100% for full coverage)', max_digits=5, null=True)),
                ('is_included', models.BooleanField(default=True, help_text='Whether this coverage is included in the policy')),
                ('is_optional', models.BooleanField(default=False, help_text='Whether this coverage is optional')),
                ('premium_impact', models.DecimalField(decimal_places=2, default=0.0, help_text='Additional premium for this coverage', max_digits=10)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order in which to display this coverage')),
                ('terms_conditions', models.TextField(blank=True, help_text='Specific terms and conditions for this coverage')),
                ('exclusions', models.TextField(blank=True, help_text='Exclusions for this coverage')),
                ('additional_info', models.JSONField(blank=True, default=dict, help_text='Additional information about the coverage')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(help_text='Policy this coverage belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='policy_coverages', to='policies.policy')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_coverages',
                'ordering': ['coverage_type', 'display_order', 'coverage_name'],
                'indexes': [models.Index(fields=['policy', 'coverage_type'], name='policy_cove_policy__7c35eb_idx'), models.Index(fields=['coverage_type', 'coverage_category'], name='policy_cove_coverag_eb2163_idx'), models.Index(fields=['policy', 'is_included'], name='policy_cove_policy__2489b5_idx'), models.Index(fields=['display_order'], name='policy_cove_display_b8da04_idx')],
                'unique_together': {('policy', 'coverage_name', 'coverage_type')},
            },
        ),
    ]
