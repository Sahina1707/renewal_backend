# Generated by Django 4.2.7 on 2025-08-07 09:44

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('policies', '0002_initial'),
        ('customers', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OtherInsurancePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('policy_number', models.CharField(help_text='Policy number from other insurance company', max_length=100)),
                ('insurance_company', models.CharField(help_text='Name of the insurance company', max_length=200)),
                ('policy_status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('lapsed', 'Lapsed'), ('matured', 'Matured'), ('surrendered', 'Surrendered'), ('pending', 'Pending'), ('unknown', 'Unknown')], default='active', help_text='Current status of the policy', max_length=20)),
                ('start_date', models.DateField(help_text='Policy start date')),
                ('end_date', models.DateField(help_text='Policy end/maturity date')),
                ('next_renewal_date', models.DateField(blank=True, help_text='Next renewal date if applicable', null=True)),
                ('premium_amount', models.DecimalField(decimal_places=2, help_text='Premium amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('sum_assured', models.DecimalField(decimal_places=2, help_text='Sum assured/coverage amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_mode', models.CharField(choices=[('annual', 'Annual'), ('semi_annual', 'Semi-Annual'), ('quarterly', 'Quarterly'), ('monthly', 'Monthly'), ('single_premium', 'Single Premium'), ('unknown', 'Unknown')], default='annual', help_text='Premium payment frequency', max_length=20)),
                ('nominee_name', models.CharField(blank=True, help_text='Nominee name', max_length=200)),
                ('nominee_relationship', models.CharField(blank=True, help_text='Relationship with nominee', max_length=100)),
                ('agent_name', models.CharField(blank=True, help_text='Agent/advisor name', max_length=200)),
                ('agent_contact', models.CharField(blank=True, help_text='Agent contact number', max_length=20)),
                ('channel', models.CharField(choices=[('agent', 'Agent'), ('broker', 'Broker'), ('bank', 'Bank Channel'), ('online', 'Online Portal'), ('direct', 'Direct from Company'), ('corporate', 'Corporate Tie-up'), ('other', 'Other'), ('unknown', 'Unknown')], default='unknown', help_text='Channel through which policy was purchased', max_length=20)),
                ('policy_features', models.JSONField(blank=True, default=dict, help_text='Additional policy features and benefits')),
                ('riders', models.JSONField(blank=True, default=list, help_text='List of riders attached to the policy')),
                ('exclusions', models.TextField(blank=True, help_text='Policy exclusions')),
                ('special_conditions', models.TextField(blank=True, help_text='Special conditions or terms')),
                ('satisfaction_rating', models.IntegerField(blank=True, help_text='Customer satisfaction rating (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('claim_experience', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('average', 'Average'), ('poor', 'Poor'), ('very_poor', 'Very Poor'), ('no_claims', 'No Claims Made')], help_text="Customer's claim experience", max_length=20)),
                ('is_renewal_interested', models.BooleanField(default=True, help_text='Whether customer is interested in renewing')),
                ('renewal_concerns', models.TextField(blank=True, help_text='Customer concerns about renewal')),
                ('competitor_advantages', models.TextField(blank=True, help_text='Advantages this policy has over our offerings')),
                ('switching_potential', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('none', 'None')], default='medium', help_text='Potential for customer to switch to our company', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this policy')),
                ('last_updated_by_customer', models.DateField(blank=True, help_text='When customer last updated this information', null=True)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('needs_update', 'Needs Update')], default='pending', help_text='Verification status of the policy information', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(help_text='Customer who owns this policy', on_delete=django.db.models.deletion.CASCADE, related_name='other_insurance_policies', to='customers.customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy_type', models.ForeignKey(help_text='Type of insurance policy (fetched from policies table)', on_delete=django.db.models.deletion.CASCADE, related_name='other_insurance_policies', to='policies.policytype')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'other_insurance_policies',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['customer'], name='other_insur_custome_263a2f_idx'), models.Index(fields=['policy_type'], name='other_insur_policy__bb1dea_idx'), models.Index(fields=['insurance_company'], name='other_insur_insuran_460de2_idx'), models.Index(fields=['policy_status'], name='other_insur_policy__2e443b_idx'), models.Index(fields=['end_date'], name='other_insur_end_dat_27000f_idx'), models.Index(fields=['next_renewal_date'], name='other_insur_next_re_45a553_idx'), models.Index(fields=['switching_potential'], name='other_insur_switchi_77a32d_idx'), models.Index(fields=['verification_status'], name='other_insur_verific_86c67c_idx')],
                'unique_together': {('customer', 'policy_number', 'insurance_company')},
            },
        ),
    ]
