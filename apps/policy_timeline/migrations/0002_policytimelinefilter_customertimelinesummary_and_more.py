# Generated by Django 4.2.7 on 2025-09-26 09:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('customers', '0003_remove_customer_communication_preferences'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('policy_timeline', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PolicyTimelineFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(help_text='Name of the filter', max_length=100)),
                ('filter_type', models.CharField(choices=[('event_type', 'Event Type'), ('date_range', 'Date Range'), ('policy_status', 'Policy Status'), ('customer_segment', 'Customer Segment')], help_text='Type of filter', max_length=20)),
                ('filter_criteria', models.JSONField(default=dict, help_text='Filter criteria as JSON')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is a default filter')),
                ('created_by', models.ForeignKey(help_text='User who created this filter', on_delete=django.db.models.deletion.CASCADE, related_name='timeline_filters', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_timeline_filters',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CustomerTimelineSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('total_events', models.PositiveIntegerField(default=0, help_text='Total number of timeline events')),
                ('active_policies', models.PositiveIntegerField(default=0, help_text='Number of active policies')),
                ('total_premium', models.DecimalField(decimal_places=2, default=0, help_text='Total annual premium across all policies', max_digits=12)),
                ('last_activity_date', models.DateTimeField(blank=True, help_text='Date of last timeline activity', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.OneToOneField(help_text='Customer this summary belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='timeline_summary', to='customers.customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer_timeline_summary',
            },
        ),
        migrations.CreateModel(
            name='PolicyTimelineEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('event_category', models.CharField(choices=[('creation', 'Creation'), ('renewal', 'Renewal'), ('modification', 'Modification'), ('claim', 'Claim'), ('payment', 'Payment'), ('communication', 'Communication')], help_text='Category of the event', max_length=20)),
                ('event_title', models.CharField(help_text='Title of the event', max_length=200)),
                ('event_description', models.TextField(help_text='Detailed description of the event')),
                ('event_date', models.DateTimeField(help_text='When the event occurred')),
                ('event_data', models.JSONField(blank=True, default=dict, help_text='Additional event-specific data')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('timeline', models.ForeignKey(help_text='Parent timeline this event belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='policy_timeline.policytimeline')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_timeline_events',
                'ordering': ['-event_date'],
                'indexes': [models.Index(fields=['timeline', 'event_date'], name='policy_time_timelin_a5768f_idx'), models.Index(fields=['event_category'], name='policy_time_event_c_702b7a_idx')],
            },
        ),
    ]
