# Generated by Django 4.2.7 on 2025-08-07 06:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0002_initial'),
        ('policies', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PolicyTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('event_type', models.CharField(choices=[('communication', 'Communication'), ('creation', 'Policy Creation'), ('renewal', 'Policy Renewal'), ('modification', 'Policy Modification'), ('claim', 'Claim Event'), ('payment', 'Payment Event'), ('coverage_review', 'Coverage Review'), ('agent_interaction', 'Agent Interaction')], db_index=True, help_text='Type of timeline event', max_length=20)),
                ('event_title', models.CharField(help_text="Title of the event (e.g., 'Policy Renewed', 'Coverage Review')", max_length=200)),
                ('event_description', models.TextField(help_text='Detailed description of the event')),
                ('event_date', models.DateTimeField(db_index=True, help_text='When the event occurred')),
                ('event_status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('scheduled', 'Scheduled'), ('cancelled', 'Cancelled'), ('in_progress', 'In Progress')], default='completed', help_text='Current status of the event', max_length=20)),
                ('premium_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Premium amount at time of event', max_digits=12, null=True)),
                ('coverage_details', models.TextField(blank=True, help_text='Coverage details at time of event')),
                ('discount_info', models.CharField(blank=True, help_text="Discount information (e.g., '5% multi-policy discount applied')", max_length=200)),
                ('outcome', models.TextField(blank=True, help_text='Outcome or result of the event')),
                ('follow_up_required', models.BooleanField(default=False, help_text='Whether follow-up is required')),
                ('follow_up_date', models.DateTimeField(blank=True, help_text='Date for follow-up action', null=True)),
                ('display_icon', models.CharField(blank=True, help_text='Icon identifier for timeline UI display', max_length=50)),
                ('is_milestone', models.BooleanField(default=False, help_text='Mark as important milestone event')),
                ('sequence_order', models.IntegerField(default=0, help_text='Order for displaying events in timeline')),
                ('agent', models.ForeignKey(blank=True, help_text='Assigned agent for this event', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='policy_timeline_events', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(help_text='Related customer', on_delete=django.db.models.deletion.CASCADE, related_name='policy_timeline_events', to='customers.customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(help_text='Related policy', on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='policies.policy')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policy_timeline',
                'ordering': ['-event_date', '-sequence_order'],
                'indexes': [models.Index(fields=['policy', 'event_date'], name='policy_time_policy__330710_idx'), models.Index(fields=['customer', 'event_date'], name='policy_time_custome_876fef_idx'), models.Index(fields=['event_type', 'event_date'], name='policy_time_event_t_abb2b1_idx'), models.Index(fields=['agent', 'event_date'], name='policy_time_agent_i_d97bb4_idx'), models.Index(fields=['event_status'], name='policy_time_event_s_544dd6_idx'), models.Index(fields=['is_milestone'], name='policy_time_is_mile_aa5577_idx')],
            },
        ),
    ]
