# Generated by Django 4.2.7 on 2025-09-24 06:14

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('policies', '0008_remove_agent_name_and_code_columns'),
        ('customers', '0003_remove_customer_communication_preferences'),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('case_id', models.CharField(db_index=True, help_text='Case ID in format CASE-XXX (e.g., CASE-001)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^CASE-\\d{3}$', 'Case ID must be in format CASE-XXX')])),
                ('title', models.CharField(help_text='Case title or description', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed case description')),
                ('status', models.CharField(choices=[('uploaded', 'Uploaded'), ('validated', 'Validated'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], db_index=True, default='uploaded', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], db_index=True, default='normal', max_length=10)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the case was started')),
                ('closed_at', models.DateTimeField(blank=True, help_text='When the case was closed', null=True)),
                ('processing_days', models.PositiveIntegerField(default=0, help_text='Number of days the case has been in processing')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Case tags for categorization')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional case metadata')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, help_text='Customer associated with this case', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='customers.customer')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('handling_agent', models.ForeignKey(blank=True, help_text='Agent assigned to handle this case', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_cases', to=settings.AUTH_USER_MODEL)),
                ('policy', models.ForeignKey(blank=True, help_text='Policy associated with this case', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cases', to='policies.policy')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Case',
                'verbose_name_plural': 'Cases',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(help_text='Comment content')),
                ('comment_type', models.CharField(choices=[('general', 'General'), ('internal', 'Internal Note'), ('customer_communication', 'Customer Communication'), ('follow_up', 'Follow-up'), ('escalation', 'Escalation'), ('resolution', 'Resolution'), ('other', 'Other')], db_index=True, default='general', help_text='Type of comment', max_length=30)),
                ('is_internal', models.BooleanField(default=False, help_text='Whether this is an internal comment (not visible to customer)')),
                ('is_important', models.BooleanField(default=False, help_text='Whether this is an important comment')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Comment tags')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional comment metadata')),
                ('case', models.ForeignKey(help_text='Case this comment belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='case_history.case')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('related_comment', models.ForeignKey(blank=True, help_text='Parent comment if this is a reply', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='case_history.casecomment')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Case Comment',
                'verbose_name_plural': 'Case Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CaseHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('action', models.CharField(choices=[('case_created', 'Case Created'), ('case_updated', 'Case Updated'), ('case_closed', 'Case Closed'), ('case_cancelled', 'Case Cancelled'), ('status_changed', 'Status Changed'), ('agent_assigned', 'Agent Assigned'), ('agent_unassigned', 'Agent Unassigned'), ('validation', 'Validation'), ('assignment', 'Assignment'), ('comment_added', 'Comment Added'), ('comment_updated', 'Comment Updated'), ('comment_deleted', 'Comment Deleted'), ('document_uploaded', 'Document Uploaded'), ('document_removed', 'Document Removed'), ('communication_sent', 'Communication Sent'), ('follow_up_scheduled', 'Follow-up Scheduled'), ('escalation', 'Escalation'), ('other', 'Other')], db_index=True, help_text='Type of action performed', max_length=30)),
                ('description', models.TextField(help_text='Detailed description of the action')),
                ('old_value', models.TextField(blank=True, help_text='Previous value (for updates)')),
                ('new_value', models.TextField(blank=True, help_text='New value (for updates)')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for this history entry')),
                ('case', models.ForeignKey(help_text='Case this history entry belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='history', to='case_history.case')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('related_comment', models.ForeignKey(blank=True, help_text='Related comment if this history entry is about a comment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history_entries', to='case_history.casecomment')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Case History',
                'verbose_name_plural': 'Case Histories',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['case', 'action'], name='case_histor_case_id_3a806f_idx'), models.Index(fields=['case', 'created_at'], name='case_histor_case_id_dbed85_idx'), models.Index(fields=['action', 'created_at'], name='case_histor_action_0c9458_idx'), models.Index(fields=['created_by'], name='case_histor_created_c7c46b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='casecomment',
            index=models.Index(fields=['case', 'comment_type'], name='case_histor_case_id_e977d5_idx'),
        ),
        migrations.AddIndex(
            model_name='casecomment',
            index=models.Index(fields=['case', 'created_at'], name='case_histor_case_id_13aef9_idx'),
        ),
        migrations.AddIndex(
            model_name='casecomment',
            index=models.Index(fields=['is_internal', 'is_important'], name='case_histor_is_inte_1492b4_idx'),
        ),
        migrations.AddIndex(
            model_name='casecomment',
            index=models.Index(fields=['related_comment'], name='case_histor_related_d0a214_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['case_id'], name='case_histor_case_id_ec1d81_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['status', 'priority'], name='case_histor_status_94f40a_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['handling_agent'], name='case_histor_handlin_f4aca3_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['started_at'], name='case_histor_started_0dace4_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['customer'], name='case_histor_custome_cf7377_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['policy'], name='case_histor_policy__705753_idx'),
        ),
    ]
