# Generated by Django 4.2.7 on 2025-08-07 05:06

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer_assets', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('vehicle_name', models.CharField(help_text='Name/Brand of the vehicle', max_length=100)),
                ('model_year', models.IntegerField(help_text='Manufacturing year of the vehicle', validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2030)])),
                ('vehicle_type', models.CharField(choices=[('car', 'Car'), ('motorcycle', 'Motorcycle'), ('truck', 'Truck'), ('van', 'Van'), ('suv', 'SUV'), ('bus', 'Bus'), ('bicycle', 'Bicycle'), ('scooter', 'Scooter'), ('other', 'Other')], default='car', help_text='Type of vehicle', max_length=20)),
                ('fuel_type', models.CharField(blank=True, choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid'), ('cng', 'CNG'), ('lpg', 'LPG'), ('other', 'Other')], help_text='Fuel type of the vehicle', max_length=20)),
                ('condition', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('very_good', 'Very Good'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], help_text='Current condition of the vehicle', max_length=20)),
                ('value', models.DecimalField(decimal_places=2, help_text='Current market value of the vehicle', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, help_text='Original purchase price of the vehicle', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('registration_number', models.CharField(blank=True, help_text='Vehicle registration number', max_length=20)),
                ('engine_capacity', models.CharField(blank=True, help_text='Engine capacity (e.g., 1.6L, 150cc)', max_length=20)),
                ('mileage', models.IntegerField(blank=True, help_text='Current mileage/odometer reading', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_objects', to=settings.AUTH_USER_MODEL)),
                ('customer_assets', models.ForeignKey(help_text='Customer assets this vehicle belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='customer_assets.customerassets')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customer_vehicles',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['customer_assets'], name='customer_ve_custome_7f11ab_idx'), models.Index(fields=['vehicle_type'], name='customer_ve_vehicle_9c9918_idx'), models.Index(fields=['model_year'], name='customer_ve_model_y_6ffd9d_idx'), models.Index(fields=['fuel_type'], name='customer_ve_fuel_ty_20ddec_idx'), models.Index(fields=['condition'], name='customer_ve_conditi_9b5e8d_idx')],
            },
        ),
    ]
